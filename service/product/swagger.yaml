openapi: 3.0.0
info:
  title: Products API
  description: API for managing product information.
  version: 1.0.0

servers:
  - url: 'https://6nwn7hfo6c.execute-api.eu-north-1.amazonaws.com/prod'
    description: Local server

paths:
  /products:
    get:
      summary: Get a list of all products
      operationId: getProducts
      responses:
        '200':
          description: Successfully retrieved list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '500':
          description: Internal server error
    post:
      summary: Add a new product
      operationId: addProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewProduct'
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Bad request
        '500':
          description: Internal server error

  /product/{id}:
    get:
      summary: Get a product by its ID
      operationId: getProductById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the product to retrieve
      responses:
        '200':
          description: Successfully retrieved product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductNotFound'
        '500':
          description: Internal server error

components:
  schemas:
    Product:
      type: object
      required:
        - id
        - title
        - price
        - description
      properties:
        id:
          type: string
          example: '1'
        title:
          type: string
          example: 'Valera'
        price:
          type: number
          format: double
          example: 50
        description:
          type: string
          example: 'High-quality wool sweater'
    NewProduct:
      type: object
      required:
        - title
        - description
        - price
        - count
      properties:
        title:
          type: string
          example: 'Valera'
        description:
          type: string
          example: 'High-quality wool sweater'
        price:
          type: number
          format: double
          example: 50
        count:
          type: number
          example: 20
    ProductNotFound:
      type: object
      properties:
        message:
          type: string
          example: 'Product not found'